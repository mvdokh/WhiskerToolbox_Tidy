name: Test and Coverage

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-and-coverage:
    runs-on: ubuntu-latest

    env:
      VCPKG_BINARY_SOURCES: clear;files,${{ github.workspace }}/vcpkg_cache,readwrite

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Common Setup
        uses: ./.github/actions/linux-setup
        with:
          buildfolder: out/build/GCC/Debug
          compiler: gcc

      - name: Configure CMake with coverage
        run: cmake --preset linux-gcc-debug -DCODE_COVERAGE=ON -DenableAddressSanitizer=ON

      - name: Build
        run: cmake --build --preset linux-gcc-debug

      - name: Test
        run: ctest --verbose --preset linux-gcc-debug -C linux-gcc-debug
        working-directory: ${{ github.workspace }}

      - name: Capture coverage info
        run: |
          lcov --directory /home/runner/work/WhiskerToolbox/WhiskerToolbox/out/build/GCC/Debug \
          --capture \
          --ignore-errors empty --ignore-errors mismatch \
          --exclude '*/tests/*' \
          --exclude '*/catch2/*' \
          --output-file coverage.info
          lcov --ignore-errors unused \
          --remove coverage.info '/usr/*' '*/tests/*' '*/out/*' '*/opt/*' --output-file coverage.info
          lcov --list coverage.info

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.COVERALLS_REPO_TOKEN }}
          path-to-lcov: coverage.info

      - name: Save vcpkg cache
        if: always()
        uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ${{ github.workspace }}/vcpkg_cache
          key: vcpkg-linux-gcc-${{ hashFiles('vcpkg.json') }}-${{ github.run_id }}
