name: Linux Clang Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      VCPKG_BINARY_SOURCES: clear;files,${{ github.workspace }}/vcpkg_cache,readwrite

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Common Setup
        uses: ./.github/actions/linux-setup
        with:
          buildfolder: out/build/Clang/Release
          compiler: clang

      - name: Configure CMake without coverage
        run: cmake --preset linux-clang-release

      - name: Display Log on failure
        if: failure()
        run: |
          cat /usr/local/share/vcpkg/buildtrees/glib/package-x64-linux-dbg-out.log
          cat /usr/local/share/vcpkg/buildtrees/glib/package-x64-linux-dbg-err.log

      - name: Build
        run: cmake --build --preset linux-clang-release

      - name: Install
        run: cmake --build --preset linux-clang-release --target install

      - name: Package with cpack
        run: |
          pushd out/build/Clang/Release
          cpack -G TGZ
          popd
        shell: bash

      - name: Find CPack Artifact
        run: |
          ARTIFACT_PATH=$(ls out/build/Clang/Release/*.tar.gz)
          echo "ARTIFACT_PATH=$ARTIFACT_PATH" >> $GITHUB_ENV
        shell: bash

      - name: Upload CPack Artifact
        uses: actions/upload-artifact@v4
        with:
          name: cpack-artifact
          path: ${{ env.ARTIFACT_PATH }}

      - name: Save vcpkg cache
        uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ${{ github.workspace }}/vcpkg_cache
          key: vcpkg-linux-clang-${{ hashFiles('vcpkg.json') }}